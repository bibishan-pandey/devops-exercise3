name: Terraform Iac and AKS Deployment

on:
    workflow_run:
        workflows:
            - "Build and Push Docker Image"
        types:
            - completed
        paths:
            - "**/*.tf"

jobs:
    terraform:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Set up Terraform
              uses: hashicorp/setup-terraform@v2
              with:
                  terraform_version: 1.5.0

            - name: Login to Azure Container Registry
              uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
                  username: ${{ secrets.AZURE_ACR_USERNAME }}
                  password: ${{ secrets.AZURE_ACR_PASSWORD }}

            - name: Terraform Init
              run: terraform init

            - name: Import Existing Resource Group
              run: |
                  terraform import azurerm_resource_group.rg /subscriptions/${{ secrets.AZURE_SUBSCRIPTION_ID }}/resourceGroups/fastapi-rg
              continue-on-error: true # Prevent failure if resource is already managed

            - name: Terraform Apply
              env:
                  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
                  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
                  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
                  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
              run: terraform apply -auto-approve
              continue-on-error: true

    deploy:
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v2

            - name: Login to Azure Container Registry
              uses: azure/docker-login@v1
              with:
                  login-server: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}
                  username: ${{ secrets.AZURE_ACR_USERNAME }}
                  password: ${{ secrets.AZURE_ACR_PASSWORD }}

            - name: Login to Azure
              uses: azure/login@v2
              with:
                  creds: '{"clientId":"${{ secrets.AZURE_CLIENT_ID }}","clientSecret":"${{ secrets.AZURE_CLIENT_SECRET }}","subscriptionId":"${{ secrets.AZURE_SUBSCRIPTION_ID }}","tenantId":"${{ secrets.AZURE_TENANT_ID }}"}'

            - name: Azure CLI script
              uses: azure/cli@v2
              with:
                  azcliversion: latest
                  inlineScript: |
                      az account show

            - name: Set AKS context
              uses: azure/aks-set-context@v3
              with:
                  resource-group: "fastapi-rg"
                  cluster-name: "fastapi-aks"

            - name: Verify kubectl
              run: kubectl get pods

            - name: Setup kubectl
              uses: azure/setup-kubectl@v3

            - name: Run kubectl to apply latest deployment
              run: |
                  az aks get-credentials --resource-group fastapi-rg --name fastapi-aks
                  kubectl set image deployment/fastapi fastapi=${{ secrets.AZURE_ACR_LOGIN_SERVER }}/fastapi-image:latest

            - name: Deploy to Kubernetes
              uses: Azure/k8s-deploy@v4
              with:
                  namespace: "default"
                  manifests: |
                      deployment.yaml
                      service.yaml
                  images: ${{ secrets.AZURE_ACR_LOGIN_SERVER }}/fastapi-image:latest
